// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// ControlPlaneUpdateStatusSummaryApplyConfiguration represents an declarative configuration of the ControlPlaneUpdateStatusSummary type for use
// with apply.
type ControlPlaneUpdateStatusSummaryApplyConfiguration struct {
	Assessment           *string                                       `json:"assessment,omitempty"`
	Versions             *ControlPlaneUpdateVersionsApplyConfiguration `json:"versions,omitempty"`
	Completion           *int32                                        `json:"completion,omitempty"`
	StartedAt            *v1.Time                                      `json:"startedAt,omitempty"`
	CompletedAt          *v1.Time                                      `json:"completedAt,omitempty"`
	EstimatedCompletedAt *v1.Time                                      `json:"estimatedCompletedAt,omitempty"`
}

// ControlPlaneUpdateStatusSummaryApplyConfiguration constructs an declarative configuration of the ControlPlaneUpdateStatusSummary type for use with
// apply.
func ControlPlaneUpdateStatusSummary() *ControlPlaneUpdateStatusSummaryApplyConfiguration {
	return &ControlPlaneUpdateStatusSummaryApplyConfiguration{}
}

// WithAssessment sets the Assessment field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Assessment field is set to the value of the last call.
func (b *ControlPlaneUpdateStatusSummaryApplyConfiguration) WithAssessment(value string) *ControlPlaneUpdateStatusSummaryApplyConfiguration {
	b.Assessment = &value
	return b
}

// WithVersions sets the Versions field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Versions field is set to the value of the last call.
func (b *ControlPlaneUpdateStatusSummaryApplyConfiguration) WithVersions(value *ControlPlaneUpdateVersionsApplyConfiguration) *ControlPlaneUpdateStatusSummaryApplyConfiguration {
	b.Versions = value
	return b
}

// WithCompletion sets the Completion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Completion field is set to the value of the last call.
func (b *ControlPlaneUpdateStatusSummaryApplyConfiguration) WithCompletion(value int32) *ControlPlaneUpdateStatusSummaryApplyConfiguration {
	b.Completion = &value
	return b
}

// WithStartedAt sets the StartedAt field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StartedAt field is set to the value of the last call.
func (b *ControlPlaneUpdateStatusSummaryApplyConfiguration) WithStartedAt(value v1.Time) *ControlPlaneUpdateStatusSummaryApplyConfiguration {
	b.StartedAt = &value
	return b
}

// WithCompletedAt sets the CompletedAt field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CompletedAt field is set to the value of the last call.
func (b *ControlPlaneUpdateStatusSummaryApplyConfiguration) WithCompletedAt(value v1.Time) *ControlPlaneUpdateStatusSummaryApplyConfiguration {
	b.CompletedAt = &value
	return b
}

// WithEstimatedCompletedAt sets the EstimatedCompletedAt field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EstimatedCompletedAt field is set to the value of the last call.
func (b *ControlPlaneUpdateStatusSummaryApplyConfiguration) WithEstimatedCompletedAt(value v1.Time) *ControlPlaneUpdateStatusSummaryApplyConfiguration {
	b.EstimatedCompletedAt = &value
	return b
}
