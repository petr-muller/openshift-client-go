// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// UpdateInsightApplyConfiguration represents an declarative configuration of the UpdateInsight type for use
// with apply.
type UpdateInsightApplyConfiguration struct {
	UID         *string                                     `json:"uid,omitempty"`
	AcquiredAt  *v1.Time                                    `json:"acquisitionTime,omitempty"`
	StartedAt   *v1.Time                                    `json:"startedAt,omitempty"`
	Scope       *UpdateInsightScopeApplyConfiguration       `json:"scope,omitempty"`
	Impact      *UpdateInsightImpactApplyConfiguration      `json:"impact,omitempty"`
	Remediation *UpdateInsightRemediationApplyConfiguration `json:"remediation,omitempty"`
}

// UpdateInsightApplyConfiguration constructs an declarative configuration of the UpdateInsight type for use with
// apply.
func UpdateInsight() *UpdateInsightApplyConfiguration {
	return &UpdateInsightApplyConfiguration{}
}

// WithUID sets the UID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UID field is set to the value of the last call.
func (b *UpdateInsightApplyConfiguration) WithUID(value string) *UpdateInsightApplyConfiguration {
	b.UID = &value
	return b
}

// WithAcquiredAt sets the AcquiredAt field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AcquiredAt field is set to the value of the last call.
func (b *UpdateInsightApplyConfiguration) WithAcquiredAt(value v1.Time) *UpdateInsightApplyConfiguration {
	b.AcquiredAt = &value
	return b
}

// WithStartedAt sets the StartedAt field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StartedAt field is set to the value of the last call.
func (b *UpdateInsightApplyConfiguration) WithStartedAt(value v1.Time) *UpdateInsightApplyConfiguration {
	b.StartedAt = &value
	return b
}

// WithScope sets the Scope field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Scope field is set to the value of the last call.
func (b *UpdateInsightApplyConfiguration) WithScope(value *UpdateInsightScopeApplyConfiguration) *UpdateInsightApplyConfiguration {
	b.Scope = value
	return b
}

// WithImpact sets the Impact field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Impact field is set to the value of the last call.
func (b *UpdateInsightApplyConfiguration) WithImpact(value *UpdateInsightImpactApplyConfiguration) *UpdateInsightApplyConfiguration {
	b.Impact = value
	return b
}

// WithRemediation sets the Remediation field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Remediation field is set to the value of the last call.
func (b *UpdateInsightApplyConfiguration) WithRemediation(value *UpdateInsightRemediationApplyConfiguration) *UpdateInsightApplyConfiguration {
	b.Remediation = value
	return b
}
